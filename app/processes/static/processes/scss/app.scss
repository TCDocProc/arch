@import "settings";
@import url(http://fonts.googleapis.com/css?family=Lato:700);

@mixin keyframes($animation-name) {

    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}

$background-color: #ECF0F1;
$unfilled-seq-width: 300px;
$filled-seq-width: 350px;

body {
    background-color: $background-color;
}

.row {
    height: 100%;
    max-height: 600px;
}
.content {
    padding: 0;
    margin-top: 50px;
    height: calc( 100% - 50px);
    font-family: "Lato";
    width:100%;
    max-width: 500px;
}

.top-bar .name {
    display: inline-block;
    vertical-align: top;
}

.top-bar .name h1 {
    line-height: 39px;
    text-transform: capitalize;
}

h1 {
    font-size: 24px;
}


.sequence {

    @for $i from 1 through 10 {
        &.siblings-#{$i} {
            width: calc(100% / #{$i})
        }
    }

    & > h1 {
        text-align: center;
        text-transform: capitalize;
        color: #ECF0F1;
        background-color: #333333;
        margin: 0;
    }

    display: inline-block;
    vertical-align: top;
    height: 100%;
    cursor: pointer;

    .focused > & {

        &:not(.fill) {
            margin-right: 5px;
        }

        height: calc(100%);
        width: $unfilled-seq-width;
    }

    &.fill {
        margin: auto;
        width: $filled-seq-width;
        > h1 {
            display: none;
        }
    }
}

.cell {

    @for $i from 1 through 10 {
        &.siblings-#{$i} {
            height: calc( 100% / #{$i} );
            h1 ~ & {
                height: calc( (100% - 36px) / #{$i} );
            }
        }
    }

    display: block;


    &.branch {

        .fill > &:not(.focused) {
            &:hover {
                background-color: #DDDDDD;
            }
            margin: 5px 0;
        }

        overflow-x: visible;
        white-space: nowrap;

        &.focused {
            height: 100%;
            padding: 0;
            @for $i from 1 through 10 {
                &.children-#{$i} {
                    width: calc( #{$unfilled-seq-width} * #{$i});
                }
            }
            &.remove-width {
                width: auto;
            }
        }
    }

    &.action {

        overflow: hidden;
        // border-radius: 3px;
        text-weight: bold;
        white-space: normal;
        // border: 2px solid white;

        .fill > & {
            height: auto;
            cursor: default;
        }

        h1 {

            text-transform: uppercase;

            :not(.focused) > .sequence > & {
                font-size: 0.8em;
                padding: 0 15px;
            }

            .focused > .sequence > & {
                margin:10px 0;
                font-size: 1.5em;
                padding: 0 15px;
            }

            :not(.focused) > * > :not(.focused) > * > & {
                display: none;
            }

        }

        p {
            display: none;
            margin: 0;
            padding: 0 15px;
            padding-bottom: 20px;
            width: 100%;

            &:last-child {
                padding-bottom: 10px;
                text-align: right;
            }

        }
    }
}

$border-darkness: 3%;
$border-width: 2px;

$ready-color: #14B259;

$active-start-color: #398CBF;
$active-end-color: #14B259;

$blocked-color: #E8142A;

$done-color: #6FBB84;

$none-color: #7F8C8D;

.READY, .AVAILABLE {

    background-color: $ready-color;
    border: 1px solid darken($ready-color, $border-darkness);
}

.ACTIVE {

    background-color: $active-end-color;
    border: $border-width solid darken($active-end-color, $border-darkness);

    @include keyframes(glow) {
        0% {
            background-color: $active-start-color;
            border: $border-width solid darken($active-start-color, $border-darkness);
        }
        90% {
            background-color: $active-end-color;
            border: $border-width solid darken($active-end-color, $border-darkness);
        }
    }
    @include animation('glow 1s infinite');
}

.BLOCKED, .SUSPENDED {

    background-color: $blocked-color;
    border: $border-width solid darken($blocked-color, $border-darkness);
}

.DONE, .SATISFIED {

    background-color: $done-color;
    border: $border-width solid darken($done-color, $border-darkness);
}

.NONE {

    background-color: $none-color;
    border: $border-width solid darken($none-color, $border-darkness);
}
